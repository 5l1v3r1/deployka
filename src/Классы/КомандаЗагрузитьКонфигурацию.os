
#Использовать v8runner
#Использовать logos

Перем РежимыОбновления;
Перем ИспользуемаяВерсияПлатформы;
Перем Лог;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Загрузка/обновление конфигурации");
	Парсер.ДобавитьКоманду(ОписаниеКоманды);

	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "СтрокаПодключения", "Строка подключения к рабочему контуру");
    Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "ПутьДистрибутива", "Путь к дистрибутиву в виде каталога версии");
    Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "/mode", "Режим обновления:
    	|-auto - Сначала искать CFU, потом CF
    	|-cf   - Использовать только CF
    	|-cfu  - Использовать только CFU
    	|-load - Полная загрузка конфигурации
    	|-skip - Не выполнять обновление");

    Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
    	"-db-user",
    	"Пользователь информационной базы");

    Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
    	"-db-pwd",
    	"Пароль пользователя информационной базы");

    Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
    	"-v8version",
    	"Маска версии платформы 1С");

КонецПроцедуры

Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
	
	Лог = Логирование.ПолучитьЛог("vanessa.app.deployka");

	СоздатьПеречислениеРежимыОбновления();

	ВозможныйРезультат = МенеджерКомандПриложения.РезультатКоманды();

	ТекущийРежим = ВыбратьРежимПоПараметрамКоманды(ПараметрыКоманды["/mode"]);

	Если ТекущийРежим = Неопределено Тогда
		Лог.Ошибка("Неверно задан режим загрузки");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ТекущийРежим = РежимыОбновления.ПропуститьШаг Тогда
		Лог.Информация("Пропускаю шаг загрузки конфигурации");
		Возврат ВозможныйРезультат.Успех;
	КонецЕсли;

	СтрокаПодключения = ПараметрыКоманды["СтрокаПодключения"];
	ПутьДистрибутива  = ПараметрыКоманды["ПутьДистрибутива"];
	Пользователь      = ПараметрыКоманды["-db-user"];
	Пароль            = ПараметрыКоманды["-db-pwd"];

	ИспользуемаяВерсияПлатформы = ПараметрыКоманды["-v8version"];

	Если ПустаяСтрока(СтрокаПодключения) Тогда
		Лог.Ошибка("Не задана строка подключения");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(ПутьДистрибутива) Тогда
		Лог.Ошибка("Не задан путь дистрибутива");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

    Попытка
    	ВыполнитьОбновлениеКонфигурации(СтрокаПодключения, ПутьДистрибутива, ИмяПользователя, Пароль, ТекущийРежим);
    Исключение
    	Лог.Ошибка(ОписаниеОшибки());
    	Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
    КонецПопытки;

КонецФункции

////////////////////////////////////////////////////////////////////////////////////////////////
// Непосредственное выполнение команды

Процедура ВыполнитьОбновлениеКонфигурации(
		Знач СтрокаПодключения,
		Знач ПутьДистрибутива,
		Знач ИмяПользователя,
		Знач ПарольПользователя,
		Знач РежимОбновления)

	Конфигуратор = Новый УправлениеКонфигуратором;
	Конфигуратор.УстановитьКонтекст(СтрокаПодключения, ИмяПользователя, Пароль);
	Если ИспользуемаяВерсияПлатформы <> Неопределено Тогда
		Конфигуратор.ИспользоватьВерсиюПлатформы(ИспользуемаяВерсияПлатформы);
	КонецЕсли;

	ВызватьИсключение "Не реализовано";

КонецПроцедуры

Функция ВыбратьРежимПоПараметрамКоманды(Знач ПараметрРежим)
	Если ПустаяСтрока(ПараметрРежим) или ПараметрРежим = "-auto" Тогда
		Возврат РежимыОбновления.Авто;
	ИначеЕсли ПараметрРежим = "-cf" Тогда
		Возврат РежимыОбновления.ПолныйДистрибутив;
	ИначеЕсли ПараметрРежим = "-cfu" Тогда
		Возврат РежимыОбновления.Обновление;
	ИначеЕсли ПараметрРежим = "-load" Тогда
		Возврат РежимыОбновления.ЗагрузкаКонфигурации;
	ИначеЕсли ПараметрРежим = "-skip" Тогда
		Возврат РежимыОбновления.ПропуститьШаг;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

Процедура СоздатьПеречислениеРежимыОбновления()
	РежимыОбновления = Новый Структура;
	РежимыОбновления.Вставить("Авто", 0);
	РежимыОбновления.Вставить("ПолныйДистрибутив", 1);
	РежимыОбновления.Вставить("Обновление", 2);
	РежимыОбновления.Вставить("ЗагрузкаКонфигурации", 3);
	РежимыОбновления.Вставить("ПропуститьШаг", 4);
КонецПроцедуры