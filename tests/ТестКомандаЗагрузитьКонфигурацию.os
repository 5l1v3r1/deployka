
#Использовать asserts
#Использовать cmdline
#Использовать tempfiles

#Использовать "../src"

Функция ПолучитьСписокТестов(МенеджерТестирования) Экспорт
    
    МассивТестов = Новый Массив;
    МассивТестов.Добавить("РежимАвтоВыбираетCFUЕслиОнЕсть");
	МассивТестов.Добавить("РежимАвтоВыбираетCFЕслиНетCFU");
	МассивТестов.Добавить("РежимАвтоВозвращаетОшибкуЕслиНетДистрибутива");
    
    Возврат МассивТестов;
    
КонецФункции

Процедура ПослеЗапускаТеста() Экспорт
	ВременныеФайлы.Удалить();
КонецПроцедуры

Процедура РежимАвтоВыбираетCFUЕслиОнЕсть() Экспорт
	Логирование.ПолучитьЛог("vanessa.app.deployka").УстановитьУровень(УровниЛога.Отладка);
	
	Конфигуратор = СоздатьЗаглушкуКонфигуратора();
	РабочийКаталог = ПодготовитьРабочийКаталог();
	
	Команда = Новый КомандаЗагрузитьКонфигурацию();
	Режимы = Команда.СоздатьПеречислениеРежимыОбновления();
	ВозмРезультат = Команда.СоздатьПеречислениеВозможныйРезультат();
	
	Результат = Команда.ОбновитьВВыбранномРежиме(Режимы.Авто, Конфигуратор, РабочийКаталог);
	
	Ожидаем.Что(Результат).Равно(ВозмРезультат.Успех);
	Ожидаем.Что(Конфигуратор.ПараметрыКоманды).Содержит("/UpdateCfg");
	
	Путь = ОбъединитьПути(РабочийКаталог, "1Cv8.cfu");
	Нашли = Ложь;
	Для Каждого ПутьВПараметрах Из Конфигуратор.ПараметрыКоманды Цикл
		Если Найти(ПутьВПараметрах, Путь) > 0 Тогда
			Нашли = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Ожидаем.Что(Нашли).ЕстьИстина();
	
КонецПроцедуры

Процедура РежимАвтоВыбираетCFЕслиНетCFU() Экспорт
	Логирование.ПолучитьЛог("vanessa.app.deployka").УстановитьУровень(УровниЛога.Отладка);
	
	Конфигуратор = СоздатьЗаглушкуКонфигуратора();
	РабочийКаталог = ПодготовитьРабочийКаталог();
	
	УдалитьФайлы(ОбъединитьПути(РабочийКаталог, "1Cv8.cfu"));
	
	Команда = Новый КомандаЗагрузитьКонфигурацию();
	Режимы = Команда.СоздатьПеречислениеРежимыОбновления();
	ВозмРезультат = Команда.СоздатьПеречислениеВозможныйРезультат();
	
	Результат = Команда.ОбновитьВВыбранномРежиме(Режимы.Авто, Конфигуратор, РабочийКаталог);
	
	Ожидаем.Что(Результат).Равно(ВозмРезультат.Успех);
	Ожидаем.Что(Конфигуратор.ПараметрыКоманды).Содержит("/UpdateCfg");
	
	Путь = ОбъединитьПути(РабочийКаталог, "1Cv8.cf");
	Нашли = Ложь;
	Для Каждого ПутьВПараметрах Из Конфигуратор.ПараметрыКоманды Цикл
		Если Найти(ПутьВПараметрах, Путь) > 0 и Найти(ПутьВПараметрах, Путь+"u") = 0 Тогда
			Нашли = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Ожидаем.Что(Нашли).ЕстьИстина();
	
КонецПроцедуры

Процедура РежимАвтоВозвращаетОшибкуЕслиНетДистрибутива() Экспорт
	Конфигуратор = СоздатьЗаглушкуКонфигуратора();
	РабочийКаталог = ПодготовитьРабочийКаталог();
	
	УдалитьФайлы(РабочийКаталог, ПолучитьМаскуВсеФайлы());
	
	Команда = Новый КомандаЗагрузитьКонфигурацию();
	Режимы = Команда.СоздатьПеречислениеРежимыОбновления();
	ВозмРезультат = Команда.СоздатьПеречислениеВозможныйРезультат();
	
	Результат = Команда.ОбновитьВВыбранномРежиме(Режимы.Авто, Конфигуратор, РабочийКаталог);
	
	Ожидаем.Что(Результат).Равно(ВозмРезультат.НеверныеПараметры);
	
КонецПроцедуры

Функция СоздатьЗаглушкуКонфигуратора()
	Возврат ЗагрузитьСценарий(ОбъединитьПути(ТекущийСценарий().Каталог, "ЗаглушкаУправленияКонфигуратором.os"));
КонецФункции

Функция ПодготовитьРабочийКаталог()
	РабочийКаталог = ВременныеФайлы.СоздатьКаталог();
	ТД = Новый ТекстовыйДокумент;
	ТД.Записать(ОбъединитьПути(РабочийКаталог, "1Cv8.cf"));
	ТД.Записать(ОбъединитьПути(РабочийКаталог, "1Cv8.cfu"));
	
	Возврат РабочийКаталог;
	
КонецФункции